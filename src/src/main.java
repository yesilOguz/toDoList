
import java.awt.event.ActionEvent;
import java.awt.event.MouseEvent;
import javax.swing.DefaultListModel;
import javax.swing.ListModel;
import java.sql.*;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author oguzy
 */
public class main extends javax.swing.JFrame {

    /**
     * Creates new form main
     */
    
    DefaultListModel lstWillModel;
    DefaultListModel lstNowModel;
    DefaultListModel lstDoneModel;
    DefaultListModel lstToDoListModel;
    
    BaseDatabaseManager dbManager;
    Connection conn;
    
    String lastElement;
    String currentListName;
    
    public main() {
        initComponents();
        
        lastElement = "";
        
        lstWillModel = new DefaultListModel();
        lstNowModel = new DefaultListModel();
        lstDoneModel = new DefaultListModel();
        lstToDoListModel = new DefaultListModel();
        
        lstWill.setModel(lstWillModel);
        lstNow.setModel(lstNowModel);
        lstDone.setModel(lstDoneModel);
        lstToDoList.setModel(lstToDoListModel);
        
        dbManager = new MySQLDatabaseManager();
        
        // userName and password
        conn = dbManager.connect("root", "12345");
        
        try{
            Statement statement = conn.createStatement();

            int sizeOfStatements;

            ResultSet countOfList = statement.executeQuery("SELECT COUNT(*) FROM lists");

            countOfList.next();
            sizeOfStatements = countOfList.getInt(1);
            
            if(sizeOfStatements == 0){
                lstToDoListModel.add(0, "Default");
                currentListName = "Default";
                
                lstToDoList.setSelectedIndex(0);
            } else {
                ResultSet lists = statement.executeQuery("SELECT * FROM lists");
                
                int i = 0;
                while(lists.next()){
                    String wills = lists.getString(2);
                    String nows = lists.getString(3);
                    String dones = lists.getString(4);
                    
                    String listName = lists.getString(5);
                    
                    lstToDoListModel.add(lstToDoListModel.size(), listName);
                    
                    if(i == 0){
                        currentListName = listName;
                        
                        String[] willItems = wills.split(":");
                        String[] nowItems = nows.split(":");
                        String[] doneItems = dones.split(":");
                        
                        addItemToList(lstWillModel, willItems);
                        addItemToList(lstNowModel, nowItems);
                        addItemToList(lstDoneModel, doneItems);
                        
                        lstToDoList.setSelectedIndex(0);
                        
                    }
                    
                    i++;
                    
                }
            }

            statement.close();
        }catch(Exception e){}
        
    }
    
    void organiseItems(String[] items, String listName){
        currentListName = listName;
        
        lstWillModel.clear();
        lstNowModel.clear();
        lstDoneModel.clear();
                        
        String[] willItems = items[0].split(":");
        String[] nowItems = items[1].split(":");
        String[] doneItems = items[2].split(":");

        addItemToList(lstWillModel, willItems);
        addItemToList(lstNowModel, nowItems);
        addItemToList(lstDoneModel, doneItems);
    }
    
    void addItemToList(DefaultListModel model, String[] arr){
        for(String item: arr){
            model.add(model.size(), item);
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblWill = new javax.swing.JLabel();
        lblNow = new javax.swing.JLabel();
        lblDone = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        lstWill = new javax.swing.JList<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        lstNow = new javax.swing.JList<>();
        jScrollPane3 = new javax.swing.JScrollPane();
        lstDone = new javax.swing.JList<>();
        btnWillAdd = new javax.swing.JButton();
        btnWillRemove = new javax.swing.JButton();
        btnNowAdd = new javax.swing.JButton();
        btnNowRemove = new javax.swing.JButton();
        btnDoneAdd = new javax.swing.JButton();
        btnDoneRemove = new javax.swing.JButton();
        lblToDoList = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        lstToDoList = new javax.swing.JList<>();
        btnToDoListAdd = new javax.swing.JButton();
        btnToDoListRemove = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblWill.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblWill.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblWill.setText("will");

        lblNow.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblNow.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblNow.setText("now");

        lblDone.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblDone.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblDone.setText("done");

        lstWill.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        lstWill.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lstWillMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(lstWill);

        lstNow.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        lstNow.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lstNowMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(lstNow);

        lstDone.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        lstDone.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lstDoneMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(lstDone);

        btnWillAdd.setText("Add");
        btnWillAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnWillAddActionPerformed(evt);
            }
        });

        btnWillRemove.setText("Remove");
        btnWillRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnWillRemoveActionPerformed(evt);
            }
        });

        btnNowAdd.setText("Add");
        btnNowAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNowAddActionPerformed(evt);
            }
        });

        btnNowRemove.setText("Remove");
        btnNowRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNowRemoveActionPerformed(evt);
            }
        });

        btnDoneAdd.setText("Add");
        btnDoneAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDoneAddActionPerformed(evt);
            }
        });

        btnDoneRemove.setText("Remove");
        btnDoneRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDoneRemoveActionPerformed(evt);
            }
        });

        lblToDoList.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblToDoList.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblToDoList.setText("to-do-lists");

        lstToDoList.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lstToDoList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        lstToDoList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);
        lstToDoList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lstToDoListMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(lstToDoList);

        btnToDoListAdd.setText("Add");
        btnToDoListAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnToDoListAddActionPerformed(evt);
            }
        });

        btnToDoListRemove.setText("Remove");
        btnToDoListRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnToDoListRemoveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblWill, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 123, Short.MAX_VALUE))
                        .addGap(52, 52, 52)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblNow, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 123, Short.MAX_VALUE))
                        .addGap(50, 50, 50)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 123, Short.MAX_VALUE)
                            .addComponent(lblDone, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnWillAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnWillRemove)
                        .addGap(34, 34, 34)
                        .addComponent(btnNowAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnNowRemove)
                        .addGap(33, 33, 33)
                        .addComponent(btnDoneAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnDoneRemove)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblToDoList, javax.swing.GroupLayout.DEFAULT_SIZE, 135, Short.MAX_VALUE)
                            .addComponent(jScrollPane4))
                        .addGap(18, 18, 18))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnToDoListAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnToDoListRemove)
                        .addGap(12, 12, 12))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblWill)
                    .addComponent(lblNow)
                    .addComponent(lblDone)
                    .addComponent(lblToDoList))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnWillAdd)
                        .addComponent(btnWillRemove))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnNowAdd)
                        .addComponent(btnNowRemove))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnToDoListAdd)
                        .addComponent(btnToDoListRemove))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnDoneAdd)
                        .addComponent(btnDoneRemove)))
                .addContainerGap(24, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    void submit(javax.swing.JDialog dlgAdd, javax.swing.JTextField txtName, DefaultListModel model){
        String text = txtName.getText();
        
        if(text.strip() == ""){
            close(dlgAdd, txtName);
            return;
        }
        
        model.add(model.getSize(), text);
        
        if(model == lstToDoListModel){
            dbManager.saveList(conn, text, new String[]{"", "", ""});
            currentListName = text;
            
            lstWillModel.clear();
            lstNowModel.clear();
            lstDoneModel.clear();
            
            for(int idx=0;idx<lstToDoListModel.size();idx++){
                String todolistName = lstToDoListModel.getElementAt(idx).toString();
                
                if(text == todolistName){
                    lstToDoList.setSelectedIndex(idx);
                    break;
                }
                
            }
            
            close(dlgAdd, txtName);
            
            return;
        }
        
        String will = collectDatas(lstWillModel);
        String now = collectDatas(lstNowModel);
        String done = collectDatas(lstDoneModel);
        
        String[] items = new String[]{will, now, done};
        
        dbManager.saveList(conn, currentListName, items);
        
        close(dlgAdd, txtName);
        
    }
    
    void close(javax.swing.JDialog dlgAdd, javax.swing.JTextField txtName){
        txtName.setText("");
        dlgAdd.setVisible(false);
    }
    
    void addWindow(DefaultListModel model){
        // create a dialog Box
        javax.swing.JDialog dlgAdd = new javax.swing.JDialog(this, "Add");

        // create a label
        javax.swing.JLabel lblAdd = new javax.swing.JLabel("Give a name: ");
        javax.swing.JTextField txtName = new javax.swing.JTextField(16);
        
        javax.swing.JButton btnOK = new javax.swing.JButton("Submit");
        javax.swing.JButton btnCancel = new javax.swing.JButton("Cancel");
        
        btnOK.addActionListener(new java.awt.event.ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                submit(dlgAdd, txtName, model);
            }
        });
        
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                close(dlgAdd, txtName);
            }
        });

        // create a panel to add buttons and textfield
        javax.swing.JPanel pnlForName = new javax.swing.JPanel();

        pnlForName.add(lblAdd);
        pnlForName.add(txtName);
        
        pnlForName.add(btnCancel);
        pnlForName.add(btnOK);

        dlgAdd.add(pnlForName);
        
        // setsize of dialog
        dlgAdd.setSize(300, 120);
        
        dlgAdd.setResizable(false);

        // set visibility of dialog
        dlgAdd.setVisible(true);
    }
    
    void deleteSelecteds(DefaultListModel model, int[] indexes){
        
        if(model == lstToDoListModel){
            
            for(int index : indexes){
                String nameOfList = model.getElementAt(index).toString();
                dbManager.removeList(conn, nameOfList);
                
                model.remove(index);
                
                
                if(nameOfList == currentListName){
                    String[] items = dbManager.getList(conn);
                    organiseItems(items, model.getElementAt(0).toString());
                }
                
            }
            
            return;
        }
        
        for(int index : indexes){
            model.remove(index);
        }
        
        String will = collectDatas(lstWillModel);
        String now = collectDatas(lstNowModel);
        String done = collectDatas(lstDoneModel);
        
        String[] items = new String[]{will, now, done};
        
        dbManager.saveList(conn, currentListName, items);
    }
    
    void changeTaskList(DefaultListModel lstWillRemove, DefaultListModel lstWillAdd,
            int index){
        String itemText = lstWillRemove.getElementAt(index).toString();
        
        lstWillRemove.remove(index);
        
        int lstWillAddCount = lstWillAdd.size();
        lstWillAdd.add(lstWillAddCount, itemText);
        
    }
    
    private void btnWillAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnWillAddActionPerformed
        // TODO add your handling code here:
        addWindow(lstWillModel);
    }//GEN-LAST:event_btnWillAddActionPerformed

    private void btnWillRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnWillRemoveActionPerformed
        // TODO add your handling code here:
        int[] indexes = lstWill.getSelectedIndices();
        
        deleteSelecteds(lstWillModel, indexes);
        
    }//GEN-LAST:event_btnWillRemoveActionPerformed

    private void btnNowAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNowAddActionPerformed
        // TODO add your handling code here:
        addWindow(lstNowModel);
    }//GEN-LAST:event_btnNowAddActionPerformed

    private void btnNowRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNowRemoveActionPerformed
        // TODO add your handling code here:
        int[] indexes = lstNow.getSelectedIndices();
        
        deleteSelecteds(lstNowModel, indexes);
    }//GEN-LAST:event_btnNowRemoveActionPerformed

    private void btnDoneAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDoneAddActionPerformed
        // TODO add your handling code here:-
        addWindow(lstDoneModel);
        
    }//GEN-LAST:event_btnDoneAddActionPerformed

    private void btnDoneRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDoneRemoveActionPerformed
        // TODO add your handling code here:
        int[] indexes = lstDone.getSelectedIndices();
        
        deleteSelecteds(lstDoneModel, indexes);
    }//GEN-LAST:event_btnDoneRemoveActionPerformed

    String collectDatas(DefaultListModel model){
        String text = "";
        
        for(int i = 0;i<model.getSize();i++){
            if(model.getElementAt(i) == "")
                continue;
            
            text += model.getElementAt(i);
            
            if(i+1 != model.getSize())
                text += ":";
        }
        
        return text;
    }
    
    private void btnToDoListAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnToDoListAddActionPerformed
        // TODO add your handling code here:
        String tempLastElement = lastElement;
        addWindow(lstToDoListModel);
        
        if(tempLastElement == lastElement)
            return;
        
        dbManager.saveList(conn, lastElement, new String[]{"","",""});
        
    }//GEN-LAST:event_btnToDoListAddActionPerformed

    private void btnToDoListRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnToDoListRemoveActionPerformed
        // TODO add your handling code here:
        int[] indexes = lstToDoList.getSelectedIndices();
        
        if(lstToDoListModel.size() == indexes.length){
            javax.swing.JOptionPane.showMessageDialog(this, "You can't delete all to-do lists!!!",
               "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
            
            return;
        }
        
        deleteSelecteds(lstToDoListModel, indexes);
    }//GEN-LAST:event_btnToDoListRemoveActionPerformed
    
    boolean checkDoubleClick(java.awt.event.MouseEvent evt){
        if(evt.getClickCount() < 2)
            return false;
        
        return true;
    }
    
    private void lstWillMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lstWillMouseClicked
        // TODO add your handling code here:
        if(!checkDoubleClick(evt))
            return;
        
        int indexOfSelected = lstWill.getSelectedIndex();
        
        changeTaskList(lstWillModel, lstNowModel, indexOfSelected);
    }//GEN-LAST:event_lstWillMouseClicked

    private void lstNowMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lstNowMouseClicked
        // TODO add your handling code here:
        if(!checkDoubleClick(evt))
            return;
        
        int indexOfSelected = lstNow.getSelectedIndex();
        
        if(evt.getButton() == MouseEvent.BUTTON1)
            changeTaskList(lstNowModel, lstDoneModel, indexOfSelected);
        else
            changeTaskList(lstNowModel, lstWillModel, indexOfSelected);
    }//GEN-LAST:event_lstNowMouseClicked

    private void lstDoneMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lstDoneMouseClicked
        // TODO add your handling code here:
        if(!checkDoubleClick(evt))
            return;
        
        int indexOfSelected = lstDone.getSelectedIndex();
        
        changeTaskList(lstDoneModel, lstNowModel, indexOfSelected);
    }//GEN-LAST:event_lstDoneMouseClicked

    private void lstToDoListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lstToDoListMouseClicked
        // TODO add your handling code here:
        if(!checkDoubleClick(evt))
            return;
        
        int indexOfSelected = lstToDoList.getSelectedIndex();
        String nameOfList = lstToDoListModel.getElementAt(indexOfSelected).toString();
        
        String[] items = dbManager.getList(conn, nameOfList);
        
        organiseItems(items, nameOfList);
        
    }//GEN-LAST:event_lstToDoListMouseClicked
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDoneAdd;
    private javax.swing.JButton btnDoneRemove;
    private javax.swing.JButton btnNowAdd;
    private javax.swing.JButton btnNowRemove;
    private javax.swing.JButton btnToDoListAdd;
    private javax.swing.JButton btnToDoListRemove;
    private javax.swing.JButton btnWillAdd;
    private javax.swing.JButton btnWillRemove;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JLabel lblDone;
    private javax.swing.JLabel lblNow;
    private javax.swing.JLabel lblToDoList;
    private javax.swing.JLabel lblWill;
    private javax.swing.JList<String> lstDone;
    private javax.swing.JList<String> lstNow;
    private javax.swing.JList<String> lstToDoList;
    private javax.swing.JList<String> lstWill;
    // End of variables declaration//GEN-END:variables
}
